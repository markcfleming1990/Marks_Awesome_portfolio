{"ast":null,"code":"import _classCallCheck from \"C:/Users/Markie Mark/Desktop/Marks_Awesome_portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/Markie Mark/Desktop/Marks_Awesome_portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { MathUtils } from './MathUtils.js';\nvar _colorKeywords = {\n  'aliceblue': 0xF0F8FF,\n  'antiquewhite': 0xFAEBD7,\n  'aqua': 0x00FFFF,\n  'aquamarine': 0x7FFFD4,\n  'azure': 0xF0FFFF,\n  'beige': 0xF5F5DC,\n  'bisque': 0xFFE4C4,\n  'black': 0x000000,\n  'blanchedalmond': 0xFFEBCD,\n  'blue': 0x0000FF,\n  'blueviolet': 0x8A2BE2,\n  'brown': 0xA52A2A,\n  'burlywood': 0xDEB887,\n  'cadetblue': 0x5F9EA0,\n  'chartreuse': 0x7FFF00,\n  'chocolate': 0xD2691E,\n  'coral': 0xFF7F50,\n  'cornflowerblue': 0x6495ED,\n  'cornsilk': 0xFFF8DC,\n  'crimson': 0xDC143C,\n  'cyan': 0x00FFFF,\n  'darkblue': 0x00008B,\n  'darkcyan': 0x008B8B,\n  'darkgoldenrod': 0xB8860B,\n  'darkgray': 0xA9A9A9,\n  'darkgreen': 0x006400,\n  'darkgrey': 0xA9A9A9,\n  'darkkhaki': 0xBDB76B,\n  'darkmagenta': 0x8B008B,\n  'darkolivegreen': 0x556B2F,\n  'darkorange': 0xFF8C00,\n  'darkorchid': 0x9932CC,\n  'darkred': 0x8B0000,\n  'darksalmon': 0xE9967A,\n  'darkseagreen': 0x8FBC8F,\n  'darkslateblue': 0x483D8B,\n  'darkslategray': 0x2F4F4F,\n  'darkslategrey': 0x2F4F4F,\n  'darkturquoise': 0x00CED1,\n  'darkviolet': 0x9400D3,\n  'deeppink': 0xFF1493,\n  'deepskyblue': 0x00BFFF,\n  'dimgray': 0x696969,\n  'dimgrey': 0x696969,\n  'dodgerblue': 0x1E90FF,\n  'firebrick': 0xB22222,\n  'floralwhite': 0xFFFAF0,\n  'forestgreen': 0x228B22,\n  'fuchsia': 0xFF00FF,\n  'gainsboro': 0xDCDCDC,\n  'ghostwhite': 0xF8F8FF,\n  'gold': 0xFFD700,\n  'goldenrod': 0xDAA520,\n  'gray': 0x808080,\n  'green': 0x008000,\n  'greenyellow': 0xADFF2F,\n  'grey': 0x808080,\n  'honeydew': 0xF0FFF0,\n  'hotpink': 0xFF69B4,\n  'indianred': 0xCD5C5C,\n  'indigo': 0x4B0082,\n  'ivory': 0xFFFFF0,\n  'khaki': 0xF0E68C,\n  'lavender': 0xE6E6FA,\n  'lavenderblush': 0xFFF0F5,\n  'lawngreen': 0x7CFC00,\n  'lemonchiffon': 0xFFFACD,\n  'lightblue': 0xADD8E6,\n  'lightcoral': 0xF08080,\n  'lightcyan': 0xE0FFFF,\n  'lightgoldenrodyellow': 0xFAFAD2,\n  'lightgray': 0xD3D3D3,\n  'lightgreen': 0x90EE90,\n  'lightgrey': 0xD3D3D3,\n  'lightpink': 0xFFB6C1,\n  'lightsalmon': 0xFFA07A,\n  'lightseagreen': 0x20B2AA,\n  'lightskyblue': 0x87CEFA,\n  'lightslategray': 0x778899,\n  'lightslategrey': 0x778899,\n  'lightsteelblue': 0xB0C4DE,\n  'lightyellow': 0xFFFFE0,\n  'lime': 0x00FF00,\n  'limegreen': 0x32CD32,\n  'linen': 0xFAF0E6,\n  'magenta': 0xFF00FF,\n  'maroon': 0x800000,\n  'mediumaquamarine': 0x66CDAA,\n  'mediumblue': 0x0000CD,\n  'mediumorchid': 0xBA55D3,\n  'mediumpurple': 0x9370DB,\n  'mediumseagreen': 0x3CB371,\n  'mediumslateblue': 0x7B68EE,\n  'mediumspringgreen': 0x00FA9A,\n  'mediumturquoise': 0x48D1CC,\n  'mediumvioletred': 0xC71585,\n  'midnightblue': 0x191970,\n  'mintcream': 0xF5FFFA,\n  'mistyrose': 0xFFE4E1,\n  'moccasin': 0xFFE4B5,\n  'navajowhite': 0xFFDEAD,\n  'navy': 0x000080,\n  'oldlace': 0xFDF5E6,\n  'olive': 0x808000,\n  'olivedrab': 0x6B8E23,\n  'orange': 0xFFA500,\n  'orangered': 0xFF4500,\n  'orchid': 0xDA70D6,\n  'palegoldenrod': 0xEEE8AA,\n  'palegreen': 0x98FB98,\n  'paleturquoise': 0xAFEEEE,\n  'palevioletred': 0xDB7093,\n  'papayawhip': 0xFFEFD5,\n  'peachpuff': 0xFFDAB9,\n  'peru': 0xCD853F,\n  'pink': 0xFFC0CB,\n  'plum': 0xDDA0DD,\n  'powderblue': 0xB0E0E6,\n  'purple': 0x800080,\n  'rebeccapurple': 0x663399,\n  'red': 0xFF0000,\n  'rosybrown': 0xBC8F8F,\n  'royalblue': 0x4169E1,\n  'saddlebrown': 0x8B4513,\n  'salmon': 0xFA8072,\n  'sandybrown': 0xF4A460,\n  'seagreen': 0x2E8B57,\n  'seashell': 0xFFF5EE,\n  'sienna': 0xA0522D,\n  'silver': 0xC0C0C0,\n  'skyblue': 0x87CEEB,\n  'slateblue': 0x6A5ACD,\n  'slategray': 0x708090,\n  'slategrey': 0x708090,\n  'snow': 0xFFFAFA,\n  'springgreen': 0x00FF7F,\n  'steelblue': 0x4682B4,\n  'tan': 0xD2B48C,\n  'teal': 0x008080,\n  'thistle': 0xD8BFD8,\n  'tomato': 0xFF6347,\n  'turquoise': 0x40E0D0,\n  'violet': 0xEE82EE,\n  'wheat': 0xF5DEB3,\n  'white': 0xFFFFFF,\n  'whitesmoke': 0xF5F5F5,\n  'yellow': 0xFFFF00,\n  'yellowgreen': 0x9ACD32\n};\nvar _hslA = {\n  h: 0,\n  s: 0,\n  l: 0\n};\nvar _hslB = {\n  h: 0,\n  s: 0,\n  l: 0\n};\n\nfunction hue2rgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1 / 6) return p + (q - p) * 6 * t;\n  if (t < 1 / 2) return q;\n  if (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n  return p;\n}\n\nfunction SRGBToLinear(c) {\n  return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n}\n\nfunction LinearToSRGB(c) {\n  return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n}\n\nvar Color = /*#__PURE__*/function () {\n  function Color(r, g, b) {\n    _classCallCheck(this, Color);\n\n    Object.defineProperty(this, 'isColor', {\n      value: true\n    });\n\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  }\n\n  _createClass(Color, [{\n    key: \"set\",\n    value: function set(value) {\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setScalar\",\n    value: function setScalar(scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    }\n  }, {\n    key: \"setHex\",\n    value: function setHex(hex) {\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      return this;\n    }\n  }, {\n    key: \"setRGB\",\n    value: function setRGB(r, g, b) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      return this;\n    }\n  }, {\n    key: \"setHSL\",\n    value: function setHSL(h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = MathUtils.euclideanModulo(h, 1);\n      s = MathUtils.clamp(s, 0, 1);\n      l = MathUtils.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setStyle\",\n    value: function setStyle(style) {\n      function handleAlpha(string) {\n        if (string === undefined) return;\n\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n\n      var m;\n\n      if (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n        var color;\n        var name = m[1];\n        var components = m[2];\n\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              handleAlpha(color[4]);\n              return this;\n            }\n\n            if (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              handleAlpha(color[4]);\n              return this;\n            }\n\n            break;\n\n          case 'hsl':\n          case 'hsla':\n            if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseInt(color[2], 10) / 100;\n              var l = parseInt(color[3], 10) / 100;\n              handleAlpha(color[4]);\n              return this.setHSL(h, s, l);\n            }\n\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n        // hex color\n        var hex = m[1];\n        var size = hex.length;\n\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          return this;\n        }\n      }\n\n      if (style && style.length > 0) {\n        return this.setColorName(style);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"setColorName\",\n    value: function setColorName(style) {\n      // color keywords\n      var hex = _colorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return new this.constructor(this.r, this.g, this.b);\n    }\n  }, {\n    key: \"copy\",\n    value: function copy(color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    }\n  }, {\n    key: \"copyGammaToLinear\",\n    value: function copyGammaToLinear(color) {\n      var gammaFactor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2.0;\n      this.r = Math.pow(color.r, gammaFactor);\n      this.g = Math.pow(color.g, gammaFactor);\n      this.b = Math.pow(color.b, gammaFactor);\n      return this;\n    }\n  }, {\n    key: \"copyLinearToGamma\",\n    value: function copyLinearToGamma(color) {\n      var gammaFactor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2.0;\n      var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n      this.r = Math.pow(color.r, safeInverse);\n      this.g = Math.pow(color.g, safeInverse);\n      this.b = Math.pow(color.b, safeInverse);\n      return this;\n    }\n  }, {\n    key: \"convertGammaToLinear\",\n    value: function convertGammaToLinear(gammaFactor) {\n      this.copyGammaToLinear(this, gammaFactor);\n      return this;\n    }\n  }, {\n    key: \"convertLinearToGamma\",\n    value: function convertLinearToGamma(gammaFactor) {\n      this.copyLinearToGamma(this, gammaFactor);\n      return this;\n    }\n  }, {\n    key: \"copySRGBToLinear\",\n    value: function copySRGBToLinear(color) {\n      this.r = SRGBToLinear(color.r);\n      this.g = SRGBToLinear(color.g);\n      this.b = SRGBToLinear(color.b);\n      return this;\n    }\n  }, {\n    key: \"copyLinearToSRGB\",\n    value: function copyLinearToSRGB(color) {\n      this.r = LinearToSRGB(color.r);\n      this.g = LinearToSRGB(color.g);\n      this.b = LinearToSRGB(color.b);\n      return this;\n    }\n  }, {\n    key: \"convertSRGBToLinear\",\n    value: function convertSRGBToLinear() {\n      this.copySRGBToLinear(this);\n      return this;\n    }\n  }, {\n    key: \"convertLinearToSRGB\",\n    value: function convertLinearToSRGB() {\n      this.copyLinearToSRGB(this);\n      return this;\n    }\n  }, {\n    key: \"getHex\",\n    value: function getHex() {\n      return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n    }\n  }, {\n    key: \"getHexString\",\n    value: function getHexString() {\n      return ('000000' + this.getHex().toString(16)).slice(-6);\n    }\n  }, {\n    key: \"getHSL\",\n    value: function getHSL(target) {\n      // h,s,l ranges are in 0.0 - 1.0\n      if (target === undefined) {\n        console.warn('THREE.Color: .getHSL() target is now required');\n        target = {\n          h: 0,\n          s: 0,\n          l: 0\n        };\n      }\n\n      var r = this.r,\n          g = this.g,\n          b = this.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n\n        hue /= 6;\n      }\n\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle() {\n      return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n    }\n  }, {\n    key: \"offsetHSL\",\n    value: function offsetHSL(h, s, l) {\n      this.getHSL(_hslA);\n      _hslA.h += h;\n      _hslA.s += s;\n      _hslA.l += l;\n      this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n      return this;\n    }\n  }, {\n    key: \"add\",\n    value: function add(color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    }\n  }, {\n    key: \"addColors\",\n    value: function addColors(color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    }\n  }, {\n    key: \"addScalar\",\n    value: function addScalar(s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    }\n  }, {\n    key: \"sub\",\n    value: function sub(color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    }\n  }, {\n    key: \"multiply\",\n    value: function multiply(color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    }\n  }, {\n    key: \"multiplyScalar\",\n    value: function multiplyScalar(s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    }\n  }, {\n    key: \"lerp\",\n    value: function lerp(color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpColors\",\n    value: function lerpColors(color1, color2, alpha) {\n      this.r = color1.r + (color2.r - color1.r) * alpha;\n      this.g = color1.g + (color2.g - color1.g) * alpha;\n      this.b = color1.b + (color2.b - color1.b) * alpha;\n      return this;\n    }\n  }, {\n    key: \"lerpHSL\",\n    value: function lerpHSL(color, alpha) {\n      this.getHSL(_hslA);\n      color.getHSL(_hslB);\n      var h = MathUtils.lerp(_hslA.h, _hslB.h, alpha);\n      var s = MathUtils.lerp(_hslA.s, _hslB.s, alpha);\n      var l = MathUtils.lerp(_hslA.l, _hslB.l, alpha);\n      this.setHSL(h, s, l);\n      return this;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    }\n  }, {\n    key: \"fromArray\",\n    value: function fromArray(array) {\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      var array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    }\n  }, {\n    key: \"fromBufferAttribute\",\n    value: function fromBufferAttribute(attribute, index) {\n      this.r = attribute.getX(index);\n      this.g = attribute.getY(index);\n      this.b = attribute.getZ(index);\n\n      if (attribute.normalized === true) {\n        // assuming Uint8Array\n        this.r /= 255;\n        this.g /= 255;\n        this.b /= 255;\n      }\n\n      return this;\n    }\n  }, {\n    key: \"toJSON\",\n    value: function toJSON() {\n      return this.getHex();\n    }\n  }]);\n\n  return Color;\n}();\n\nColor.NAMES = _colorKeywords;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\nexport { Color };","map":{"version":3,"names":["MathUtils","_colorKeywords","_hslA","h","s","l","_hslB","hue2rgb","p","q","t","SRGBToLinear","c","Math","pow","LinearToSRGB","Color","r","g","b","Object","defineProperty","value","undefined","set","setRGB","isColor","copy","setHex","setStyle","scalar","hex","floor","euclideanModulo","clamp","style","handleAlpha","string","parseFloat","console","warn","m","exec","color","name","components","min","parseInt","setHSL","size","length","charAt","setColorName","constructor","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","getHex","toString","slice","target","max","hue","saturation","lightness","delta","getHSL","color1","color2","alpha","lerp","array","offset","attribute","index","getX","getY","getZ","normalized","NAMES","prototype"],"sources":["C:/Users/Markie Mark/Desktop/Marks_Awesome_portfolio/node_modules/three/src/math/Color.js"],"sourcesContent":["import { MathUtils } from './MathUtils.js';\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tObject.defineProperty( this, 'isColor', { value: true } );\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tset( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = MathUtils.euclideanModulo( h, 1 );\n\t\ts = MathUtils.clamp( s, 0, 1 );\n\t\tl = MathUtils.clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tconst h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tconst s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tconst l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopyGammaToLinear( color, gammaFactor = 2.0 ) {\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToGamma( color, gammaFactor = 2.0 ) {\n\n\t\tconst safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t}\n\n\tconvertGammaToLinear( gammaFactor ) {\n\n\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToGamma( gammaFactor ) {\n\n\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex() {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t}\n\n\tgetHexString() {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tif ( target === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t}\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle() {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\treturn this;\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\tif ( attribute.normalized === true ) {\n\n\t\t\t// assuming Uint8Array\n\n\t\t\tthis.r /= 255;\n\t\t\tthis.g /= 255;\n\t\t\tthis.b /= 255;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n}\n\nColor.NAMES = _colorKeywords;\nColor.prototype.r = 1;\nColor.prototype.g = 1;\nColor.prototype.b = 1;\n\n\nexport { Color };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}