{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport const useInViewport = function (elementRef, unobserveOnIntersect) {\n  _s();\n\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const [intersect, setIntersect] = useState(false);\n  const [isUnobserved, setIsUnobserved] = useState(false);\n  useEffect(() => {\n    if (!(elementRef !== null && elementRef !== void 0 && elementRef.current)) return;\n    const observer = new IntersectionObserver(_ref => {\n      let [entry] = _ref;\n      const {\n        isIntersecting,\n        target\n      } = entry;\n      setIntersect(isIntersecting);\n\n      if (isIntersecting && unobserveOnIntersect) {\n        observer.unobserve(target);\n        setIsUnobserved(true);\n      }\n    }, options);\n\n    if (!isUnobserved) {\n      observer.observe(elementRef.current);\n    }\n\n    return () => observer.disconnect();\n  }, [elementRef, unobserveOnIntersect, options, isUnobserved]);\n  return intersect;\n};\n\n_s(useInViewport, \"C9dlr0sue9RRlQ01r1V61pLZP4Q=\");","map":{"version":3,"names":["useEffect","useState","useInViewport","elementRef","unobserveOnIntersect","options","intersect","setIntersect","isUnobserved","setIsUnobserved","current","observer","IntersectionObserver","entry","isIntersecting","target","unobserve","observe","disconnect"],"sources":["C:/Users/Markie Mark/Desktop/Marks_Awesome_portfolio/src/hooks/useInViewport.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nexport const useInViewport = (\r\n    elementRef,\r\n    unobserveOnIntersect,\r\n    options = {}\r\n) => {\r\n    const [intersect, setIntersect] = useState(false);\r\n    const [isUnobserved, setIsUnobserved] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!elementRef?.current) return;\r\n\r\n        const observer = new IntersectionObserver(([entry]) => {\r\n            const { isIntersecting, target } = entry;\r\n\r\n            setIntersect(isIntersecting);\r\n\r\n            if (isIntersecting && unobserveOnIntersect) {\r\n                observer.unobserve(target);\r\n                setIsUnobserved(true);\r\n            }\r\n        }, options);\r\n\r\n        if (!isUnobserved) {\r\n            observer.observe(elementRef.current);\r\n        }\r\n\r\n        return () => observer.disconnect();\r\n    }, [elementRef, unobserveOnIntersect, options, isUnobserved]);\r\n\r\n    return intersect;\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,aAAa,GAAG,UACzBC,UADyB,EAEzBC,oBAFyB,EAIxB;EAAA;;EAAA,IADDC,OACC,uEADS,EACT;EACD,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,KAAD,CAAhD;EAEAD,SAAS,CAAC,MAAM;IACZ,IAAI,EAACG,UAAD,aAACA,UAAD,eAACA,UAAU,CAAEO,OAAb,CAAJ,EAA0B;IAE1B,MAAMC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyB,QAAa;MAAA,IAAZ,CAACC,KAAD,CAAY;MACnD,MAAM;QAAEC,cAAF;QAAkBC;MAAlB,IAA6BF,KAAnC;MAEAN,YAAY,CAACO,cAAD,CAAZ;;MAEA,IAAIA,cAAc,IAAIV,oBAAtB,EAA4C;QACxCO,QAAQ,CAACK,SAAT,CAAmBD,MAAnB;QACAN,eAAe,CAAC,IAAD,CAAf;MACH;IACJ,CATgB,EASdJ,OATc,CAAjB;;IAWA,IAAI,CAACG,YAAL,EAAmB;MACfG,QAAQ,CAACM,OAAT,CAAiBd,UAAU,CAACO,OAA5B;IACH;;IAED,OAAO,MAAMC,QAAQ,CAACO,UAAT,EAAb;EACH,CAnBQ,EAmBN,CAACf,UAAD,EAAaC,oBAAb,EAAmCC,OAAnC,EAA4CG,YAA5C,CAnBM,CAAT;EAqBA,OAAOF,SAAP;AACH,CA9BM;;GAAMJ,a"},"metadata":{},"sourceType":"module"}