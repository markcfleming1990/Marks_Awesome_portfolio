{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Markie Mark\\\\Desktop\\\\forkPortfolio\\\\react-portfolio-MF\\\\src\\\\components\\\\background\\\\DisplacementSphere.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useContext } from \"react\";\nimport classNames from \"classnames\";\nimport { Vector2, sRGBEncoding, WebGLRenderer, PerspectiveCamera, Scene, DirectionalLight, AmbientLight, UniformsUtils, UniformsLib, MeshPhongMaterial, SphereBufferGeometry, Mesh } from \"three\";\nimport { spring, value } from \"popmotion\";\nimport innerHeight from \"ios-inner-height\";\nimport vertShader from \"./sphereVertShader\";\nimport fragShader from \"./sphereFragShader\";\nimport { Transition } from \"react-transition-group\";\nimport { usePrefersReducedMotion } from \"../../hooks/usePrefersReducedMotion\";\nimport { useInViewport } from \"../../hooks/useInViewport\";\nimport { reflow } from \"../../utils/transition\";\nimport { media, rgbToThreeColor } from \"../../utils/style\";\nimport { cleanScene, removeLights, cleanRenderer } from \"../../utils/three\";\nimport \"./DisplacementSphere.css\";\nimport { ThemeContext } from \"../theme/ThemeProvider\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DisplacementSphere = props => {\n  _s();\n\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const rgbBackground = theme === \"light\" ? \"250 250 250\" : \"17 17 17\";\n  const width = useRef(window.innerWidth);\n  const height = useRef(window.innerHeight);\n  const start = useRef(Date.now());\n  const canvasRef = useRef();\n  const mouse = useRef();\n  const renderer = useRef();\n  const camera = useRef();\n  const scene = useRef();\n  const lights = useRef();\n  const uniforms = useRef();\n  const material = useRef();\n  const geometry = useRef();\n  const sphere = useRef();\n  const tweenRef = useRef();\n  const sphereSpring = useRef();\n  const prefersReducedMotion = Boolean(usePrefersReducedMotion() && false); //disabled until switching themes fixed\n\n  const isInViewport = useInViewport(canvasRef);\n  useEffect(() => {\n    mouse.current = new Vector2(0.8, 0.5);\n    renderer.current = new WebGLRenderer({\n      canvas: canvasRef.current,\n      powerPreference: \"high-performance\"\n    });\n    renderer.current.setSize(width.current, height.current);\n    renderer.current.setPixelRatio(1);\n    renderer.current.outputEncoding = sRGBEncoding;\n    camera.current = new PerspectiveCamera(55, width.current / height.current, 0.1, 200);\n    camera.current.position.z = 52;\n    scene.current = new Scene();\n    material.current = new MeshPhongMaterial();\n\n    material.current.onBeforeCompile = shader => {\n      uniforms.current = UniformsUtils.merge([UniformsLib[\"ambient\"], UniformsLib[\"lights\"], shader.uniforms, {\n        time: {\n          type: \"f\",\n          value: 0\n        }\n      }]);\n      shader.uniforms = uniforms.current;\n      shader.vertexShader = vertShader;\n      shader.fragmentShader = fragShader;\n      shader.lights = true;\n    };\n\n    geometry.current = new SphereBufferGeometry(32, 128, 128);\n    sphere.current = new Mesh(geometry.current, material.current);\n    sphere.current.position.z = 0;\n    sphere.current.modifier = Math.random();\n    scene.current.add(sphere.current);\n    return () => {\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n  }, []);\n  useEffect(() => {\n    const dirLight = new DirectionalLight(rgbToThreeColor(\"250 250 250\"), 0.6);\n    const ambientLight = new AmbientLight(rgbToThreeColor(\"250 250 250\"), theme === \"light\" ? 0.8 : 0.1);\n    dirLight.position.z = 200;\n    dirLight.position.x = 100;\n    dirLight.position.y = 100;\n    lights.current = [dirLight, ambientLight];\n    scene.current.background = rgbToThreeColor(rgbBackground);\n    lights.current.forEach(light => scene.current.add(light));\n    return () => {\n      removeLights(lights.current);\n    };\n  }, [rgbBackground, theme]);\n  useEffect(() => {\n    const handleResize = () => {\n      const canvasHeight = innerHeight();\n      const windowWidth = window.innerWidth;\n      const fullHeight = canvasHeight + canvasHeight * 0.3;\n      canvasRef.current.style.height = fullHeight;\n      renderer.current.setSize(windowWidth, fullHeight);\n      camera.current.aspect = windowWidth / fullHeight;\n      camera.current.updateProjectionMatrix(); // Render a single frame on resize when not animating\n\n      if (prefersReducedMotion) {\n        renderer.current.render(scene.current, camera.current);\n      }\n\n      if (windowWidth <= media.mobile) {\n        sphere.current.position.x = 14;\n        sphere.current.position.y = 10;\n      } else if (windowWidth <= media.tablet) {\n        sphere.current.position.x = 18;\n        sphere.current.position.y = 14;\n      } else {\n        sphere.current.position.x = 22;\n        sphere.current.position.y = 16;\n      }\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n    handleResize();\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [prefersReducedMotion]);\n  useEffect(() => {\n    const onMouseMove = event => {\n      const {\n        rotation\n      } = sphere.current;\n      const position = {\n        x: event.clientX / window.innerWidth,\n        y: event.clientY / window.innerHeight\n      };\n\n      if (!sphereSpring.current) {\n        sphereSpring.current = value(rotation.toArray(), values => rotation.set(values[0], values[1], sphere.current.rotation.z));\n      }\n\n      tweenRef.current = spring({\n        from: sphereSpring.current.get(),\n        to: [position.y / 2, position.x / 2],\n        stiffness: 30,\n        damping: 20,\n        velocity: sphereSpring.current.getVelocity(),\n        mass: 2,\n        restSpeed: 0.0001\n      }).start(sphereSpring.current);\n    };\n\n    if (!prefersReducedMotion && isInViewport) {\n      window.addEventListener(\"mousemove\", onMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener(\"mousemove\", onMouseMove);\n\n      if (tweenRef.current) {\n        tweenRef.current.stop();\n      }\n    };\n  }, [isInViewport, prefersReducedMotion]);\n  useEffect(() => {\n    let animation;\n\n    const animate = () => {\n      animation = requestAnimationFrame(animate);\n\n      if (uniforms.current !== undefined) {\n        uniforms.current.time.value = 0.00005 * (Date.now() - start.current);\n      }\n\n      sphere.current.rotation.z += 0.001;\n      renderer.current.render(scene.current, camera.current);\n    };\n\n    if (!prefersReducedMotion && isInViewport) {\n      animate();\n    } else {\n      renderer.current.render(scene.current, camera.current);\n    }\n\n    return () => {\n      cancelAnimationFrame(animation);\n    };\n  }, [isInViewport, prefersReducedMotion]);\n  return /*#__PURE__*/_jsxDEV(Transition, {\n    appear: true,\n    in: true,\n    onEnter: reflow,\n    timeout: 3000,\n    children: status => /*#__PURE__*/_jsxDEV(\"canvas\", {\n      \"aria-hidden\": true,\n      className: classNames(\"displacement-sphere\", `displacement-sphere--${status}`),\n      ref: canvasRef,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DisplacementSphere, \"835L/JicW3yN5gvOXIURRj25CLU=\", false, function () {\n  return [usePrefersReducedMotion, useInViewport];\n});\n\n_c = DisplacementSphere;\nexport default DisplacementSphere;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplacementSphere\");","map":{"version":3,"names":["React","useEffect","useRef","useContext","classNames","Vector2","sRGBEncoding","WebGLRenderer","PerspectiveCamera","Scene","DirectionalLight","AmbientLight","UniformsUtils","UniformsLib","MeshPhongMaterial","SphereBufferGeometry","Mesh","spring","value","innerHeight","vertShader","fragShader","Transition","usePrefersReducedMotion","useInViewport","reflow","media","rgbToThreeColor","cleanScene","removeLights","cleanRenderer","ThemeContext","DisplacementSphere","props","theme","rgbBackground","width","window","innerWidth","height","start","Date","now","canvasRef","mouse","renderer","camera","scene","lights","uniforms","material","geometry","sphere","tweenRef","sphereSpring","prefersReducedMotion","Boolean","isInViewport","current","canvas","powerPreference","setSize","setPixelRatio","outputEncoding","position","z","onBeforeCompile","shader","merge","time","type","vertexShader","fragmentShader","modifier","Math","random","add","dirLight","ambientLight","x","y","background","forEach","light","handleResize","canvasHeight","windowWidth","fullHeight","style","aspect","updateProjectionMatrix","render","mobile","tablet","addEventListener","removeEventListener","onMouseMove","event","rotation","clientX","clientY","toArray","values","set","from","get","to","stiffness","damping","velocity","getVelocity","mass","restSpeed","stop","animation","animate","requestAnimationFrame","undefined","cancelAnimationFrame","status"],"sources":["C:/Users/Markie Mark/Desktop/forkPortfolio/react-portfolio-MF/src/components/background/DisplacementSphere.js"],"sourcesContent":["import React, { useEffect, useRef, useContext } from \"react\";\r\nimport classNames from \"classnames\";\r\nimport {\r\n    Vector2,\r\n    sRGBEncoding,\r\n    WebGLRenderer,\r\n    PerspectiveCamera,\r\n    Scene,\r\n    DirectionalLight,\r\n    AmbientLight,\r\n    UniformsUtils,\r\n    UniformsLib,\r\n    MeshPhongMaterial,\r\n    SphereBufferGeometry,\r\n    Mesh,\r\n} from \"three\";\r\nimport { spring, value } from \"popmotion\";\r\nimport innerHeight from \"ios-inner-height\";\r\nimport vertShader from \"./sphereVertShader\";\r\nimport fragShader from \"./sphereFragShader\";\r\nimport { Transition } from \"react-transition-group\";\r\nimport { usePrefersReducedMotion } from \"../../hooks/usePrefersReducedMotion\";\r\nimport { useInViewport } from \"../../hooks/useInViewport\";\r\nimport { reflow } from \"../../utils/transition\";\r\nimport { media, rgbToThreeColor } from \"../../utils/style\";\r\nimport { cleanScene, removeLights, cleanRenderer } from \"../../utils/three\";\r\nimport \"./DisplacementSphere.css\";\r\nimport { ThemeContext } from \"../theme/ThemeProvider\";\r\n\r\nconst DisplacementSphere = (props) => {\r\n    const { theme } = useContext(ThemeContext);\r\n    const rgbBackground = theme === \"light\" ? \"250 250 250\" : \"17 17 17\";\r\n    const width = useRef(window.innerWidth);\r\n    const height = useRef(window.innerHeight);\r\n    const start = useRef(Date.now());\r\n    const canvasRef = useRef();\r\n    const mouse = useRef();\r\n    const renderer = useRef();\r\n    const camera = useRef();\r\n    const scene = useRef();\r\n    const lights = useRef();\r\n    const uniforms = useRef();\r\n    const material = useRef();\r\n    const geometry = useRef();\r\n    const sphere = useRef();\r\n    const tweenRef = useRef();\r\n    const sphereSpring = useRef();\r\n    const prefersReducedMotion = Boolean(usePrefersReducedMotion() && false); //disabled until switching themes fixed\r\n    const isInViewport = useInViewport(canvasRef);\r\n\r\n    useEffect(() => {\r\n        mouse.current = new Vector2(0.8, 0.5);\r\n        renderer.current = new WebGLRenderer({\r\n            canvas: canvasRef.current,\r\n            powerPreference: \"high-performance\",\r\n        });\r\n        renderer.current.setSize(width.current, height.current);\r\n        renderer.current.setPixelRatio(1);\r\n        renderer.current.outputEncoding = sRGBEncoding;\r\n\r\n        camera.current = new PerspectiveCamera(\r\n            55,\r\n            width.current / height.current,\r\n            0.1,\r\n            200\r\n        );\r\n        camera.current.position.z = 52;\r\n\r\n        scene.current = new Scene();\r\n\r\n        material.current = new MeshPhongMaterial();\r\n        material.current.onBeforeCompile = (shader) => {\r\n            uniforms.current = UniformsUtils.merge([\r\n                UniformsLib[\"ambient\"],\r\n                UniformsLib[\"lights\"],\r\n                shader.uniforms,\r\n                { time: { type: \"f\", value: 0 } },\r\n            ]);\r\n\r\n            shader.uniforms = uniforms.current;\r\n            shader.vertexShader = vertShader;\r\n            shader.fragmentShader = fragShader;\r\n            shader.lights = true;\r\n        };\r\n\r\n        geometry.current = new SphereBufferGeometry(32, 128, 128);\r\n\r\n        sphere.current = new Mesh(geometry.current, material.current);\r\n        sphere.current.position.z = 0;\r\n        sphere.current.modifier = Math.random();\r\n        scene.current.add(sphere.current);\r\n\r\n        return () => {\r\n            cleanScene(scene.current);\r\n            cleanRenderer(renderer.current);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const dirLight = new DirectionalLight(\r\n            rgbToThreeColor(\"250 250 250\"),\r\n            0.6\r\n        );\r\n        const ambientLight = new AmbientLight(\r\n            rgbToThreeColor(\"250 250 250\"),\r\n            theme === \"light\" ? 0.8 : 0.1\r\n        );\r\n\r\n        dirLight.position.z = 200;\r\n        dirLight.position.x = 100;\r\n        dirLight.position.y = 100;\r\n\r\n        lights.current = [dirLight, ambientLight];\r\n        scene.current.background = rgbToThreeColor(rgbBackground);\r\n        lights.current.forEach((light) => scene.current.add(light));\r\n\r\n        return () => {\r\n            removeLights(lights.current);\r\n        };\r\n    }, [rgbBackground, theme]);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => {\r\n            const canvasHeight = innerHeight();\r\n            const windowWidth = window.innerWidth;\r\n            const fullHeight = canvasHeight + canvasHeight * 0.3;\r\n            canvasRef.current.style.height = fullHeight;\r\n            renderer.current.setSize(windowWidth, fullHeight);\r\n            camera.current.aspect = windowWidth / fullHeight;\r\n            camera.current.updateProjectionMatrix();\r\n\r\n            // Render a single frame on resize when not animating\r\n            if (prefersReducedMotion) {\r\n                renderer.current.render(scene.current, camera.current);\r\n            }\r\n\r\n            if (windowWidth <= media.mobile) {\r\n                sphere.current.position.x = 14;\r\n                sphere.current.position.y = 10;\r\n            } else if (windowWidth <= media.tablet) {\r\n                sphere.current.position.x = 18;\r\n                sphere.current.position.y = 14;\r\n            } else {\r\n                sphere.current.position.x = 22;\r\n                sphere.current.position.y = 16;\r\n            }\r\n        };\r\n\r\n        window.addEventListener(\"resize\", handleResize);\r\n        handleResize();\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", handleResize);\r\n        };\r\n    }, [prefersReducedMotion]);\r\n\r\n    useEffect(() => {\r\n        const onMouseMove = (event) => {\r\n            const { rotation } = sphere.current;\r\n\r\n            const position = {\r\n                x: event.clientX / window.innerWidth,\r\n                y: event.clientY / window.innerHeight,\r\n            };\r\n\r\n            if (!sphereSpring.current) {\r\n                sphereSpring.current = value(rotation.toArray(), (values) =>\r\n                    rotation.set(\r\n                        values[0],\r\n                        values[1],\r\n                        sphere.current.rotation.z\r\n                    )\r\n                );\r\n            }\r\n\r\n            tweenRef.current = spring({\r\n                from: sphereSpring.current.get(),\r\n                to: [position.y / 2, position.x / 2],\r\n                stiffness: 30,\r\n                damping: 20,\r\n                velocity: sphereSpring.current.getVelocity(),\r\n                mass: 2,\r\n                restSpeed: 0.0001,\r\n            }).start(sphereSpring.current);\r\n        };\r\n\r\n        if (!prefersReducedMotion && isInViewport) {\r\n            window.addEventListener(\"mousemove\", onMouseMove);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener(\"mousemove\", onMouseMove);\r\n\r\n            if (tweenRef.current) {\r\n                tweenRef.current.stop();\r\n            }\r\n        };\r\n    }, [isInViewport, prefersReducedMotion]);\r\n\r\n    useEffect(() => {\r\n        let animation;\r\n\r\n        const animate = () => {\r\n            animation = requestAnimationFrame(animate);\r\n\r\n            if (uniforms.current !== undefined) {\r\n                uniforms.current.time.value =\r\n                    0.00005 * (Date.now() - start.current);\r\n            }\r\n\r\n            sphere.current.rotation.z += 0.001;\r\n            renderer.current.render(scene.current, camera.current);\r\n        };\r\n\r\n        if (!prefersReducedMotion && isInViewport) {\r\n            animate();\r\n        } else {\r\n            renderer.current.render(scene.current, camera.current);\r\n        }\r\n\r\n        return () => {\r\n            cancelAnimationFrame(animation);\r\n        };\r\n    }, [isInViewport, prefersReducedMotion]);\r\n\r\n    return (\r\n        <Transition appear in onEnter={reflow} timeout={3000}>\r\n            {(status) => (\r\n                <canvas\r\n                    aria-hidden\r\n                    className={classNames(\r\n                        \"displacement-sphere\",\r\n                        `displacement-sphere--${status}`\r\n                    )}\r\n                    ref={canvasRef}\r\n                    {...props}\r\n                />\r\n            )}\r\n        </Transition>\r\n    );\r\n};\r\n\r\nexport default DisplacementSphere;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}