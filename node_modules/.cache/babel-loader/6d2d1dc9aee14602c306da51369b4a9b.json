{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Markie Mark\\\\Desktop\\\\forkPortfolio\\\\react-portfolio-MF\\\\src\\\\components\\\\theme\\\\ThemeProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext } from \"react\";\nimport { LightTheme, DarkTheme } from \"./Themes\";\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n\n  const getInitialMode = () => {\n    if (typeof localStorage === \"undefined\") return true;\n    const isReturningUser = (\"dark\" in localStorage);\n    const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\n    const userPrefersDark = getPrefColorScheme();\n\n    if (isReturningUser) {\n      return savedMode;\n    }\n\n    return !!userPrefersDark;\n  };\n\n  const getPrefColorScheme = () => {\n    if (!window.matchMedia) return;\n    return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n  };\n\n  const [theme, setTheme] = useState(getInitialMode() ? \"dark\" : \"light\");\n\n  const toggleTheme = () => {\n    if (theme === \"light\") {\n      setTheme(\"dark\");\n    } else {\n      setTheme(\"light\");\n    }\n  };\n\n  useEffect(() => {\n    typeof localStorage !== \"undefined\" && localStorage.setItem(\"dark\", JSON.stringify(theme === \"dark\"));\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: /*#__PURE__*/_jsxDEV(MuiThemeProvider, {\n      theme: theme === \"light\" ? LightTheme : DarkTheme,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ThemeProvider, \"Pkk77J4vbc3z16pZRsvmc/newc8=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","useEffect","useState","createContext","LightTheme","DarkTheme","MuiThemeProvider","ThemeContext","ThemeProvider","children","getInitialMode","localStorage","isReturningUser","savedMode","JSON","parse","getItem","userPrefersDark","getPrefColorScheme","window","matchMedia","matches","theme","setTheme","toggleTheme","setItem","stringify"],"sources":["C:/Users/Markie Mark/Desktop/forkPortfolio/react-portfolio-MF/src/components/theme/ThemeProvider.js"],"sourcesContent":["import React, { useEffect, useState, createContext } from \"react\";\r\nimport { LightTheme, DarkTheme } from \"./Themes\";\r\nimport { MuiThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n    const getInitialMode = () => {\r\n        if (typeof localStorage === \"undefined\") return true;\r\n        const isReturningUser = \"dark\" in localStorage;\r\n        const savedMode = JSON.parse(localStorage.getItem(\"dark\"));\r\n        const userPrefersDark = getPrefColorScheme();\r\n        if (isReturningUser) {\r\n            return savedMode;\r\n        }\r\n        return !!userPrefersDark;\r\n    };\r\n\r\n    const getPrefColorScheme = () => {\r\n        if (!window.matchMedia) return;\r\n\r\n        return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\r\n    };\r\n\r\n    const [theme, setTheme] = useState(getInitialMode() ? \"dark\" : \"light\");\r\n\r\n    const toggleTheme = () => {\r\n        if (theme === \"light\") {\r\n            setTheme(\"dark\");\r\n        } else {\r\n            setTheme(\"light\");\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        typeof localStorage !== \"undefined\" &&\r\n            localStorage.setItem(\"dark\", JSON.stringify(theme === \"dark\"));\r\n    }, [theme]);\r\n\r\n    return (\r\n        <ThemeContext.Provider\r\n            value={{\r\n                theme,\r\n                toggleTheme,\r\n            }}\r\n        >\r\n            <MuiThemeProvider\r\n                theme={theme === \"light\" ? LightTheme : DarkTheme}\r\n            >\r\n                {children}\r\n            </MuiThemeProvider>\r\n        </ThemeContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;AACA,SAASC,gBAAT,QAAiC,0BAAjC;;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;AAEP,OAAO,MAAMK,aAAa,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;;EAC3C,MAAMC,cAAc,GAAG,MAAM;IACzB,IAAI,OAAOC,YAAP,KAAwB,WAA5B,EAAyC,OAAO,IAAP;IACzC,MAAMC,eAAe,IAAG,UAAUD,YAAb,CAArB;IACA,MAAME,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACK,OAAb,CAAqB,MAArB,CAAX,CAAlB;IACA,MAAMC,eAAe,GAAGC,kBAAkB,EAA1C;;IACA,IAAIN,eAAJ,EAAqB;MACjB,OAAOC,SAAP;IACH;;IACD,OAAO,CAAC,CAACI,eAAT;EACH,CATD;;EAWA,MAAMC,kBAAkB,GAAG,MAAM;IAC7B,IAAI,CAACC,MAAM,CAACC,UAAZ,EAAwB;IAExB,OAAOD,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAzD;EACH,CAJD;;EAMA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAACQ,cAAc,KAAK,MAAL,GAAc,OAA7B,CAAlC;;EAEA,MAAMc,WAAW,GAAG,MAAM;IACtB,IAAIF,KAAK,KAAK,OAAd,EAAuB;MACnBC,QAAQ,CAAC,MAAD,CAAR;IACH,CAFD,MAEO;MACHA,QAAQ,CAAC,OAAD,CAAR;IACH;EACJ,CAND;;EAQAtB,SAAS,CAAC,MAAM;IACZ,OAAOU,YAAP,KAAwB,WAAxB,IACIA,YAAY,CAACc,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAeJ,KAAK,KAAK,MAAzB,CAA7B,CADJ;EAEH,CAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;EAKA,oBACI,QAAC,YAAD,CAAc,QAAd;IACI,KAAK,EAAE;MACHA,KADG;MAEHE;IAFG,CADX;IAAA,uBAMI,QAAC,gBAAD;MACI,KAAK,EAAEF,KAAK,KAAK,OAAV,GAAoBlB,UAApB,GAAiCC,SAD5C;MAAA,UAGKI;IAHL;MAAA;MAAA;MAAA;IAAA;EANJ;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH,CA/CM;;GAAMD,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}