{"ast":null,"code":"import { Color } from 'three/src/math/Color';\n/**\r\n * Media query breakpoints\r\n */\n\nexport const media = {\n  desktop: 1600,\n  laptop: 1280,\n  tablet: 1024,\n  mobile: 696,\n  mobileS: 320\n};\n/**\r\n * Convert a px string to a number\r\n */\n\nexport const pxToNum = px => Number(px.replace('px', ''));\n/**\r\n * Convert a number to a px string\r\n */\n\nexport const numToPx = num => `${num}px`;\n/**\r\n * Convert pixel values to rem for a11y\r\n */\n\nexport const pxToRem = px => `${px / 16}rem`;\n/**\r\n * Convert ms token values to a raw numbers for ReactTransitionGroup\r\n * Transition delay props\r\n */\n\nexport const msToNum = msString => Number(msString.replace('ms', ''));\n/**\r\n * Convert a number to an ms string\r\n */\n\nexport const numToMs = num => `${num}ms`;\n/**\r\n * Convert an rgb theme property (e.g. rgbBlack: '0 0 0')\r\n * to a ThreeJS Color class\r\n */\n\nexport const rgbToThreeColor = rgb => new Color(...rgb.split(' ').map(value => Number(value) / 255));","map":{"version":3,"names":["Color","media","desktop","laptop","tablet","mobile","mobileS","pxToNum","px","Number","replace","numToPx","num","pxToRem","msToNum","msString","numToMs","rgbToThreeColor","rgb","split","map","value"],"sources":["C:/Users/Markie Mark/Desktop/Marks_Awesome_portfolio/src/utils/style.js"],"sourcesContent":["import { Color } from 'three/src/math/Color';\r\n\r\n/**\r\n * Media query breakpoints\r\n */\r\nexport const media = {\r\n  desktop: 1600,\r\n  laptop: 1280,\r\n  tablet: 1024,\r\n  mobile: 696,\r\n  mobileS: 320,\r\n};\r\n\r\n/**\r\n * Convert a px string to a number\r\n */\r\nexport const pxToNum = px => Number(px.replace('px', ''));\r\n\r\n/**\r\n * Convert a number to a px string\r\n */\r\nexport const numToPx = num => `${num}px`;\r\n\r\n/**\r\n * Convert pixel values to rem for a11y\r\n */\r\nexport const pxToRem = px => `${px / 16}rem`;\r\n\r\n/**\r\n * Convert ms token values to a raw numbers for ReactTransitionGroup\r\n * Transition delay props\r\n */\r\nexport const msToNum = msString => Number(msString.replace('ms', ''));\r\n\r\n/**\r\n * Convert a number to an ms string\r\n */\r\nexport const numToMs = num => `${num}ms`;\r\n\r\n/**\r\n * Convert an rgb theme property (e.g. rgbBlack: '0 0 0')\r\n * to a ThreeJS Color class\r\n */\r\nexport const rgbToThreeColor = rgb =>\r\n  new Color(...rgb.split(' ').map(value => Number(value) / 255));\r\n"],"mappings":"AAAA,SAASA,KAAT,QAAsB,sBAAtB;AAEA;AACA;AACA;;AACA,OAAO,MAAMC,KAAK,GAAG;EACnBC,OAAO,EAAE,IADU;EAEnBC,MAAM,EAAE,IAFW;EAGnBC,MAAM,EAAE,IAHW;EAInBC,MAAM,EAAE,GAJW;EAKnBC,OAAO,EAAE;AALU,CAAd;AAQP;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGC,EAAE,IAAIC,MAAM,CAACD,EAAE,CAACE,OAAH,CAAW,IAAX,EAAiB,EAAjB,CAAD,CAA5B;AAEP;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGC,GAAG,IAAK,GAAEA,GAAI,IAA9B;AAEP;AACA;AACA;;AACA,OAAO,MAAMC,OAAO,GAAGL,EAAE,IAAK,GAAEA,EAAE,GAAG,EAAG,KAAjC;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMM,OAAO,GAAGC,QAAQ,IAAIN,MAAM,CAACM,QAAQ,CAACL,OAAT,CAAiB,IAAjB,EAAuB,EAAvB,CAAD,CAAlC;AAEP;AACA;AACA;;AACA,OAAO,MAAMM,OAAO,GAAGJ,GAAG,IAAK,GAAEA,GAAI,IAA9B;AAEP;AACA;AACA;AACA;;AACA,OAAO,MAAMK,eAAe,GAAGC,GAAG,IAChC,IAAIlB,KAAJ,CAAU,GAAGkB,GAAG,CAACC,KAAJ,CAAU,GAAV,EAAeC,GAAf,CAAmBC,KAAK,IAAIZ,MAAM,CAACY,KAAD,CAAN,GAAgB,GAA5C,CAAb,CADK"},"metadata":{},"sourceType":"module"}